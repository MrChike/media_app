version: "3.8"


services:

  redis:
    image: redis:8.0.1-bookworm
    container_name: redis-cache-broker
    restart: on-failure
    command:
      [
        "redis-server",
        "--bind", "0.0.0.0",
        "--port", "6379",
        "--maxmemory", "256mb",
        "--maxmemory-policy", "allkeys-lru",
        "--appendonly", "yes",
        "--requirepass", "${REDIS_PASSWORD}"
      ]
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - "0.0.0.0:6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  redisinsight:
    # http://localhost:5540/  
    # Log into Redis DB with Connection URL -> redis://:root@redis:6379
    image: redis/redisinsight:2.70
    container_name: redis-insight
    depends_on:
      - redis
    ports:
      - "0.0.0.0:5540:5540"

  postgres:
    image: postgres:16.9-bullseye
    container_name: postgres
    restart: always
    shm_size: 128mb
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_HOST=${POSTGRES_HOST}
    depends_on:
      - redis
    ports:
      - "0.0.0.0:5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin4:
    # http://localhost:8083/  
    # Log into Postgres DB with Credentials -> Email: root@mailinator.com, Password: root
    image: dpage/pgadmin4:9.4.0
    container_name: pgadmin4
    depends_on:
      - postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: root@mailinator.com
      PGADMIN_DEFAULT_PASSWORD: root
      GLOBALLY_DELIVERABLE: "True"
    ports:
      - "0.0.0.0:8083:80"

  mongo:
    image: mongo:7.0.5
    container_name: mongo
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_PASSWORD}
    depends_on:
      - redis
    ports:
      - "0.0.0.0:27017:27017"
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 15s
      retries: 5

  mongo-express:
    # http://localhost:8081/db/root/
    image: mongo-express:1.0.2-20-alpine3.19
    container_name: mongo-express
    depends_on:
      - mongo
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
      ME_CONFIG_MONGODB_URL: mongodb://root:root@mongo:27017/
      ME_CONFIG_BASICAUTH: "false"
    ports:
      - "0.0.0.0:8081:8081"
